{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/images/2017-7.jpg","webpack:///./src/images/2018-8.jpg","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./src/pages/about.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"names":["module","exports","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","__webpack_require__","p","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","handledProps","propTypes","create","factories","Grid_GridColumn","GridRow","centered","columns","divided","reversed","Grid_GridRow","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","__webpack_exports__","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_images_2017_7_jpg__WEBPACK_IMPORTED_MODULE_3__","_images_2017_7_jpg__WEBPACK_IMPORTED_MODULE_3___default","_images_2018_8_jpg__WEBPACK_IMPORTED_MODULE_4__","_images_2018_8_jpg__WEBPACK_IMPORTED_MODULE_4___default","About","style","paddingTop","paddingLeft","paddingRight","paddingBottom","href","rel","target","fontSize","borderRadius","alt","src","Img20177","Img20188","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"mappings":"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","file":"component---src-pages-about-js-7f881b11758335ecb561.js","sourcesContent":["function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","module.exports = __webpack_public_path__ + \"static/2017-7-04ced7d7798d4fae865563d3455b7b13.jpg\";","module.exports = __webpack_public_path__ + \"static/2018-8-0f9c1b274c07bbdd9f66b543919f26e8.jpg\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import React from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nimport Img20177 from '../images/2017-7.jpg'\nimport Img20188 from '../images/2018-8.jpg'\n\nconst About = () => (\n  <Grid>\n    <Grid.Row>\n      <div\n        style={{\n          paddingTop: 20,\n          paddingLeft: 100,\n          paddingRight: 100,\n          paddingBottom: 20,\n        }}\n      >\n        <h1>關於 LetFreeCode</h1>\n        <h2>\n          <a href=\"https://www.facebook.com/LetFreeCode/\">粉絲團連結</a>\n        </h2>\n        <h2>免費資源</h2>\n        <ul>\n          <li>\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://drive.google.com/drive/folders/1Jp80LEsWWpblbx9s4xipRj_T6CUAGxW4?usp=sharing\"\n            >\n              Nodejs 錄影\n            </a>\n          </li>\n          <li>\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://drive.google.com/drive/folders/1MnrxNnIFPCqMUfyLC3pJ9i7yrJxQKV2_?usp=sharing\"\n            >\n              Reactjs 錄影\n            </a>\n          </li>\n        </ul>\n        <div\n          style={{\n            fontSize: 20,\n          }}\n        >\n          <p>自 2017 開始，希望透過實體分享方式，將我們所學分享給需要的人，</p>\n          <p>\n            在 LetFreeCode\n            所辦的大多數活動都是免費提供，除了需要場地費時，需要大家一起分攤\n          </p>\n          <p>我們希望透過這種方式，讓更多人更願意做分享，</p>\n          <p>直到 2018 做了 4 場的活動，都屬於較小型的活動，</p>\n          <p>從今年開始至 2019 我們希望透過不同型態來舉辦更多活動，</p>\n          <p>\n            最開心的是有許多人從中得到了一些經驗，更能夠快速的進入這個領域，\n          </p>\n          <p>這是我們的開始，讓我們一起加油，創造更好的學習環境。</p>\n        </div>\n        <br />\n        <Image style={{ borderRadius: 3 }} alt=\"20177\" src={Img20177} />\n        <br />\n        <Image style={{ borderRadius: 3 }} alt=\"20188\" src={Img20188} />\n      </div>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default About\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;"],"sourceRoot":""}